
# ===============================
# = DATA SOURCE
# ===============================

#MYSQL
#spring.datasource.url = jdbc:mysql://localhost:3306/pricecomparison?useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
# Username and password
#spring.datasource.username = root
#spring.datasource.password =
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#PoSTGRESQL
spring.datasource.url = postgres://abjgxcmlumcfjq:380285ba1ae638c33e99ff9e7bf4aba6a50a618f069c78d4c1aaeefcdd63bc24@ec2-79-125-26-232.eu-west-1.compute.amazonaws.com:5432/d5aqjrnmr1hv07
spring.datasource.username = abjgxcmlumcfjq
spring.datasource.password = 380285ba1ae638c33e99ff9e7bf4aba6a50a618f069c78d4c1aaeefcdd63bc24
spring.datasource.driver-class-name = postgresql:postgresql:9.1-901.jdbc4
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
jwt.secret=javainuse

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true


# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS

